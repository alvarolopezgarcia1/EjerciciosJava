/*Cree las funciones cuyas cabeceras se muestran a continuación, observe que tienen el mismo nombre:
public static int ocurrencias(int digito, int n) 
public static int ocurrencias(int digito, int[] a)
La función ocurrencias devuelve el número de veces que aparece un dígito dentro de un número (primera
función) o bien el número de veces que aparece un dígito en una serie de números contenidos en un array 
(segunda función). Se valorará especialmente la reutilización y uso óptimo del código.*/

public class ej2 {

	public static void main(String[] args) {

		System.out.println(ocurrencias(3, 1111333));
		System.out.println(ocurrencias2(1, 456));

	}

	public static int ocurrencias(int digito, int n) {

		int contador = 0;

		for (int i = 0; i < n; i++) {
			int unidades = n % 10;
			n = n / 10;
			if (unidades == digito) {
				contador++;
			}
		}

		return contador;
	}

	public static int ocurrencias2(int digito, int j) {

		int contador = 0;

		for (int i = 0; i < j.length; i++) {
			int numAux = j[i];
			boolean encontrado = false;
			do {

				int unidades = numAux % 10;
				numAux = numAux / 10;
				if (unidades == digito) {
					encontrado = true;
				}
			} while ((numAux) > 0 && (!encontrado));

			if (encontrado) {
				contador++;
			}

		}

		return contador;

	}

}
